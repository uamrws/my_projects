import httpx

url = "https://hub.chinalife-p.com.cn/mescifp/prod/index.html?userCode={userCode}&bid={bid}"


def temp(user_code, bid):
    headers = {
        "Host": "hub.chinalife-p.com.cn",
        "Origin": "https://hub.chinalife-p.com.cn",
        "Referer": f"https://hub.chinalife-p.com.cn/mescifp/prod/index.html?userCode={user_code}&bid={123}",
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36"
    }
    with httpx.Client() as cli:
        resp = cli.post(
            url="https://hub.chinalife-p.com.cn/MesBaseUrl/getToken",
            headers=headers, json={
                "userCode": user_code, "bid": bid
            }
        )
        token = resp.json()["data"]["token"]
        headers.update(OauthToken=token, Referer="https://hub.chinalife-p.com.cn/", Host="mesbj.chinalife-p.com.cn")
        resp = cli.post(
            "https://mesbj.chinalife-p.com.cn/mesci/order/MesOrderInfos/doElectricCode",
            headers=headers,
            json={"thisId": bid}
        )
        r_json = resp.json()
        print(resp.json())
        if r_json["status"] != "200":
            return "失败", r_json["msg"]

        resp = cli.post(
            "https://mesbj.chinalife-p.com.cn/mesci/sales/SalesManager/getLoginInfo",
            headers=headers,
            json={
                "userCode": user_code,
                "bid": bid,
                "salesGethdbyhpFlag": "2"
            }
        )
        r_json = resp.json()
        print(resp.json())
        if r_json["status"] != "200":
            return "失败", r_json["msg"]
    return "成功", ""


if __name__ == '__main__':
    a = [['44068319930428111X', '4406059030'], ['440682199109141350', '4406059030'], ['440602199006100925', '4406059030'], ['44190019890527518X', '4419933009'], ['450422198805221434', '4406059028'], ['441202199008221033', '4412016005'], ['440602197909090941', '4406979030'], ['440684198803245721', '4406089001'], ['440624197908160459', '4406089002'], ['440682197512211719', '4406879001'], ['440624197310040014', '4406080001'], ['44062419780620692X', '4406089001'], ['440684198205022712', '4406089002'], ['440682198807273225', '4406979034'], ['440624197411036946', '4406080001'], ['440682198708237237', '4406089002'], ['440682199903042130', '4406979034'], ['445302199404283315', '4412933045'], ['440682199204292157', '4406979034'], ['440624196907040020', '4406080001'], ['440682199401192120', '4406979034'], ['440624197510023817', '4406089002'], ['440684199705281512', '4406080001'], ['440682199510172110', '4406979034'], ['440682199309292110', '4406979034'], ['440682200102262112', '4406979034'], ['440684198510241559', '4406080001'], ['440682199908052119', '4406979034'], ['440682200110022119', '4406979034'], ['440684199206266916', '4406080001'], ['440684198104115012', '4406080001'], ['440602197708270946', '4406089001'], ['440684199505110436', '4406089002'], ['440684199704236912', '4406089002'], ['440684199404191513', '4406089002'], ['445322198409100726', '4412019006'], ['440684199406110430', '4406089002'], ['440624197008220815', '4406089001'], ['440624197006262739', '4406089002'], ['440684198611166930', '4406089002'], ['440684198104193846', '4406089002'], ['440682198802033230', '4406089002'], ['440684199209240439', '4406089002'], ['44068419951117572X', '4406089002'], ['440684199704235725-01', '4406089002'], ['441284198810260048', '4412933039'], ['44020219860402003X', '4406974001'], ['441521199401178225', '4401160020'], ['441426197610050911', '4406933104'], ['440682198605160628', '4406933104'], ['441224199604282017', '4406933104'], ['441224198911134060', '4406933104'], ['441224199011024047', '4406933104'], ['440622195807153696', '4406933104'], ['440682199509190637', '4406933104'], ['44068219870531361X', '4406933005'], ['342622199007121190', '4406059027']]
    for item in a:
        user_code, bid = item
        s, m = temp(user_code, bid)
        item.append(s)
        item.append(m)

    with open("temp.csv", 'w') as f:
        for i in a:
            f.write(",".join(i)+"\n")

# s="""
# 44068319930428111X	4406059030
# 440682199109141350	4406059030
# 440602199006100925	4406059030
# 44190019890527518X	4419933009
# 450422198805221434	4406059028
# 441202199008221033	4412016005
# 440602197909090941	4406979030
# 440684198803245721	4406089001
# 440624197908160459	4406089002
# 440682197512211719	4406879001
# 440624197310040014	4406080001
# 44062419780620692X	4406089001
# 440684198205022712	4406089002
# 440682198807273225	4406979034
# 440624197411036946	4406080001
# 440682198708237237	4406089002
# 440682199903042130	4406979034
# 445302199404283315	4412933045
# 440682199204292157	4406979034
# 440624196907040020	4406080001
# 440682199401192120	4406979034
# 440624197510023817	4406089002
# 440684199705281512	4406080001
# 440682199510172110	4406979034
# 440682199309292110	4406979034
# 440682200102262112	4406979034
# 440684198510241559	4406080001
# 440682199908052119	4406979034
# 440682200110022119	4406979034
# 440684199206266916	4406080001
# 440684198104115012	4406080001
# 440602197708270946	4406089001
# 440684199505110436	4406089002
# 440684199704236912	4406089002
# 440684199404191513	4406089002
# 445322198409100726	4412019006
# 440684199406110430	4406089002
# 440624197008220815	4406089001
# 440624197006262739	4406089002
# 440684198611166930	4406089002
# 440684198104193846	4406089002
# 440682198802033230	4406089002
# 440684199209240439	4406089002
# 44068419951117572X	4406089002
# 440684199704235725-01	4406089002
# 441284198810260048	4412933039
# 44020219860402003X	4406974001
# 441521199401178225	4401160020
# 441426197610050911	4406933104
# 440682198605160628	4406933104
# 441224199604282017	4406933104
# 441224198911134060	4406933104
# 441224199011024047	4406933104
# 440622195807153696	4406933104
# 440682199509190637	4406933104
# 44068219870531361X	4406933005
# 342622199007121190	4406059027
# """

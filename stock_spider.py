import requests_async as requests
import asyncio

_list = [
    '600000',
    '600008',
    '600009',
    '600010',
    '600011',
    '600015',
    '600016',
    '600018',
    '600019',
    '600021',
    '600023',
    '600028',
    '600029',
    '600030',
    '600031',
    '600036',
    '600038',
    '600048',
    '600050',
    '600061',
    '600066',
    '600068',
    '600074',
    '600085',
    '600089',
    '600100',
    '600104',
    '600109',
    '600111',
    '600115',
    '600118',
    '600153',
    '600157',
    '600170',
    '600177',
    '600188',
    '600196',
    '600208',
    '600219',
    '600221',
    '600233',
    '600271',
    '600276',
    '600297',
    '600309',
    '600332',
    '600340',
    '600352',
    '600362',
    '600369',
    '600372',
    '600373',
    '600376',
    '600383',
    '600390',
    '600406',
    '600415',
    '600436',
    '600482',
    '600485',
    '600489',
    '600498',
    '600518',
    '600519',
    '600522',
    '600535',
    '600547',
    '600549',
    '600570',
    '600583',
    '600585',
    '600588',
    '600606',
    '600637',
    '600649',
    '600660',
    '600663',
    '600674',
    '600682',
    '600685',
    '600688',
    '600690',
    '600703',
    '600704',
    '600705',
    '600739',
    '600741',
    '600795',
    '600804',
    '600816',
    '600820',
    '600827',
    '600837',
    '600871',
    '600886',
    '600887',
    '600893',
    '600895',
    '600900',
    '600909',
    '600919',
    '600926',
    '600958',
    '600959',
    '600977',
    '600999',
    '601006',
    '601009',
    '601012',
    '601018',
    '601021',
    '601088',
    '601099',
    '601111',
    '601117',
    '601118',
    '601155',
    '601163',
    '601166',
    '601169',
    '601186',
    '601198',
    '601211',
    '601212',
    '601216',
    '601225',
    '601228',
    '601229',
    '601288',
    '601318',
    '601328',
    '601333',
    '601336',
    '601375',
    '601377',
    '601390',
    '601398',
    '601555',
    '601600',
    '601601',
    '601607',
    '601608',
    '601611',
    '601618',
    '601628',
    '601633',
    '601668',
    '601669',
    '601688',
    '601718',
    '601727',
    '601766',
    '601788',
    '601800',
    '601818',
    '601857',
    '601866',
    '601872',
    '601877',
    '601878',
    '601881',
    '601888',
    '601898',
    '601899',
    '601901',
    '601919',
    '601933',
    '601939',
    '601958',
    '601966',
    '601985',
    '601988',
    '601989',
    '601991',
    '601992',
    '601997',
    '601998',
    '603160',
    '603799',
    '603833',
    '603858',
    '603993',
    '000001',
    '000002',
    '000008',
    '000060',
    '000063',
    '000069',
    '000100',
    '000157',
    '000166',
    '000333',
    '000338',
    '000402',
    '000413',
    '000415',
    '000423',
    '000425',
    '000503',
    '000538',
    '000540',
    '000559',
    '000568',
    '000623',
    '000625',
    '000627',
    '000630',
    '000651',
    '000671',
    '000686',
    '000709',
    '000723',
    '000725',
    '000728',
    '000738',
    '000750',
    '000768',
    '000776',
    '000783',
    '000792',
    '000826',
    '000839',
    '000858',
    '000876',
    '000895',
    '000898',
    '000938',
    '000959',
    '000961',
    '000963',
    '000983',
    '001979',
    '002007',
    '002008',
    '002024',
    '002027',
    '002044',
    '002065',
    '002074',
    '002081',
    '002142',
    '002146',
    '002153',
    '002174',
    '002202',
    '002230',
    '002236',
    '002241',
    '002252',
    '002292',
    '002294',
    '002304',
    '002310',
    '002352',
    '002385',
    '002411',
    '002415',
    '002424',
    '002426',
    '002450',
    '002456',
    '002460',
    '002465',
    '002466',
    '002468',
    '002470',
    '002475',
    '002500',
    '002508',
    '002555',
    '002558',
    '002572',
    '002594',
    '002601',
    '002602',
    '002608',
    '002624',
    '002673',
    '002714',
    '002736',
    '002739',
    '002797',
    '002831',
    '002839',
    '002841',
    '300003',
    '300015',
    '300017',
    '300024',
    '300027',
    '300033',
    '300059',
    '300070',
    '300072',
    '300122',
    '300124',
    '300136',
    '300144',
    '300251',
    '300315',
]
_list = ['600008']

async def get_stock(code):
    if code.startswith('6'):
        code = '0' + code
    else:
        code = '1' + code
    path = f"http://quotes.money.163.com/service/chddata.html?code={code}&start=20161201&end=20191201"
    headers = {
        "Accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
        'Cache-Control': 'max-age=0',
        'Cookie': '_ntes_nuid=07473ae1c9117ddd9cc13b25a5c4a19e; vjuids=-4855564b.16f36ecae13.0.e20e39b6d2ef7; vjlast=1577174478.1577174478.30; _ntes_nnid=d70cb49c72fa08aeb93228572fab84b1,1577174478371; ne_analysis_trace_id=1577174478378; s_n_f_l_n3=a4b78753b144d21a1577174478382; Province=0; City=0; vinfo_n_f_l_n3=a4b78753b144d21a.1.0.1577174478381.0.1577174518397',
        'Host': 'quotes.money.163.com',
        'Proxy-Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36',
    }
    a = await requests.get(path, headers=headers)
    return '\n'.join(a.text.split('\n')[1:])


async def main():
    cors = []
    for code in _list:
        cors.append(get_stock(code))
    conts = await asyncio.gather(*cors)
    with open('quantitative_finance/stock.csv', 'w') as f:
        f.write('日期,股票代码,名称,收盘价,最高价,最低价,开盘价,前收盘,涨跌额,涨跌幅,换手率,成交量,成交金额,总市值,流通市值,成交笔数')
        f.write('\n')
        f.writelines(conts)


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
